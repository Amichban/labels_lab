version: '3.8'

services:
  # Label Computation API
  labels-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: labels-api
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      # API Configuration
      - API_HOST=0.0.0.0
      - API_PORT=8000
      - API_WORKERS=4
      - DEBUG=false
      - ENVIRONMENT=docker
      
      # ClickHouse Configuration
      - CLICKHOUSE_HOST=clickhouse
      - CLICKHOUSE_PORT=9000
      - CLICKHOUSE_USER=default
      - CLICKHOUSE_PASSWORD=clickhouse_pass
      - CLICKHOUSE_DATABASE=quantx
      - CLICKHOUSE_SECURE=false
      
      # Redis Configuration
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=redis_pass
      - REDIS_DB=0
      
      # Cache Configuration
      - CACHE_TTL_SECONDS=3600
      
      # Monitoring
      - PROMETHEUS_ENABLED=true
      - PROMETHEUS_PORT=9090
      
      # Performance
      - BATCH_CHUNK_SIZE=10000
      - PARALLEL_WORKERS=4
    volumes:
      - ./logs:/app/logs
      - ./temp:/app/temp
    depends_on:
      - clickhouse
      - redis
    networks:
      - labels-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/v1/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ClickHouse Database
  clickhouse:
    image: clickhouse/clickhouse-server:23.8
    container_name: clickhouse
    restart: unless-stopped
    ports:
      - "8123:8123"  # HTTP interface
      - "9000:9000"  # Native interface
      - "9440:9440"  # HTTPS interface
    environment:
      - CLICKHOUSE_DB=quantx
      - CLICKHOUSE_USER=default
      - CLICKHOUSE_PASSWORD=clickhouse_pass
      - CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT=1
    volumes:
      - clickhouse_data:/var/lib/clickhouse
      - ./config/clickhouse:/etc/clickhouse-server/config.d
    networks:
      - labels-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8123/ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: >
      redis-server
      --requirepass redis_pass
      --maxmemory 2gb
      --maxmemory-policy allkeys-lru
      --save 60 1000
      --loglevel warning
    volumes:
      - redis_data:/data
    networks:
      - labels-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Prometheus for metrics collection (optional)
  prometheus:
    image: prom/prometheus:v2.45.0
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=30d'
      - '--web.enable-lifecycle'
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - labels-network

  # Grafana for metrics visualization (optional)
  grafana:
    image: grafana/grafana:10.0.0
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=grafana_pass
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./config/grafana/provisioning:/etc/grafana/provisioning
    networks:
      - labels-network

volumes:
  clickhouse_data:
    driver: local
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  labels-network:
    driver: bridge
    name: labels-network